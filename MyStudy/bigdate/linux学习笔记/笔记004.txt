######################     VI 文本编辑器学习   ##################################################

1.打开文件
    vi +行号 filename   进去的光标，在具体某一行
    vi +                直接光标最后一行
    vi +/pattern        打开正则第一次匹配到的一行
2. 查找替换
    - s/str1/str2/gi
    - /:临近s命令的第一个字符边界 ：/,@,#
    - g:一行内全部替换
    - i:忽略大小写
- 范围
    - n:行号
    - .:当前光标行
    - +n:偏移n行
    - $:末尾行
    - %：全文

    eg:  :.,$s/after/before/   在当前光标行到末尾after替换成before
    eg:  /before                查找before这个字符，找到按n(即next)可以查看下一个

 3. 命令模式下：
语法： u              按u撤回 
       /              eg:  /before       查找before这个单词
      ：a,bd          删除行号为a-b之间的数据  eg: :.,$d 删除光标所在到最后一行的数据 

      ：a,by          复制行号为a-b之间的数据  eg: :.,$y 复制光标所在行到最后一行的数据 
                                                 按p可进行粘贴


4. 正则
语法： grep "pattern" filename                  
       grep -E "pattern" filename   (-E 参数 扩展正则 external)

       eg: grep "[0-9]\{4\}"   找出有四个数字的
            grep -E "[0-9]{4}" 

5. cut 切割分隔符
    -f 选择显示的列
    -s 不显示没有分隔符的列
    -d 自定义分隔符
    eg: cut -d':' -f a.txt              以“：”切割a.txt，并显示第一列 （-d 代表自定义分隔符）

6. sort 
    -n  数值序列排列
    -t  自定义分隔符
    -k  选择第几列
    -r  倒叙排列
    
    eg: sort -t' ' -k2 -n a.txt  将a.txt以空格分割，取第二列，以数值序 排列

7. wc 显示文件行数，字符数，字节数
    
    eg: wc a.txt 显示a.txt 的信息

8. sed  
    - d   删除符合条件的的行
    - p   显示符合条件的行
    - a\string  在指定的行下面添加新行，内容为string
    - i\string  在指定的行上面添加新行，内容为string
    - r FILE    将指定的文件的内容添加至符合条件的行处
    - w FILE    将地址指定的范围内的行另存至指定的文件中; 
    - S\  s/pattern/string/修饰符: 查找并替换，默认只替换每行中第一次被模式匹配到的字符串
            g: 行内全局替换
            i: 忽略字符大小写
            s///: s###, s@@@

 综合应用：
     num=10
     sed "s/\(IPADDR=[0-9]\{3\}.[0-9]\{3\}.[0-9]\{3\}\.\).*/\1$num/" ifcfg-eth0 
     可以 ip地址并修改最后一个段的值
     注意：这里一定要使用双引号，单引号没用